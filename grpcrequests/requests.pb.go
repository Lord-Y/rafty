// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.0
// source: grpcrequests/requests.proto

package grpcrequests

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HelloRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcrequests_requests_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcrequests_requests_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_grpcrequests_requests_proto_rawDescGZIP(), []int{0}
}

func (x *HelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type HelloReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcrequests_requests_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpcrequests_requests_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_grpcrequests_requests_proto_rawDescGZIP(), []int{1}
}

func (x *HelloReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PreVoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State       string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	CurrentTerm uint64 `protobuf:"varint,3,opt,name=currentTerm,proto3" json:"currentTerm,omitempty"`
}

func (x *PreVoteRequest) Reset() {
	*x = PreVoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcrequests_requests_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreVoteRequest) ProtoMessage() {}

func (x *PreVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcrequests_requests_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreVoteRequest.ProtoReflect.Descriptor instead.
func (*PreVoteRequest) Descriptor() ([]byte, []int) {
	return file_grpcrequests_requests_proto_rawDescGZIP(), []int{2}
}

func (x *PreVoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PreVoteRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *PreVoteRequest) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

type PreVoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID      string `protobuf:"bytes,1,opt,name=peerID,proto3" json:"peerID,omitempty"`
	State       string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	CurrentTerm uint64 `protobuf:"varint,3,opt,name=currentTerm,proto3" json:"currentTerm,omitempty"`
}

func (x *PreVoteResponse) Reset() {
	*x = PreVoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcrequests_requests_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreVoteResponse) ProtoMessage() {}

func (x *PreVoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcrequests_requests_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreVoteResponse.ProtoReflect.Descriptor instead.
func (*PreVoteResponse) Descriptor() ([]byte, []int) {
	return file_grpcrequests_requests_proto_rawDescGZIP(), []int{3}
}

func (x *PreVoteResponse) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

func (x *PreVoteResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *PreVoteResponse) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

type VoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State              string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	CurrentTerm        uint64 `protobuf:"varint,3,opt,name=currentTerm,proto3" json:"currentTerm,omitempty"`
	CurrentCommitIndex uint64 `protobuf:"varint,4,opt,name=currentCommitIndex,proto3" json:"currentCommitIndex,omitempty"`
	LastApplied        uint64 `protobuf:"varint,5,opt,name=lastApplied,proto3" json:"lastApplied,omitempty"`
}

func (x *VoteRequest) Reset() {
	*x = VoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcrequests_requests_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteRequest) ProtoMessage() {}

func (x *VoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcrequests_requests_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteRequest.ProtoReflect.Descriptor instead.
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return file_grpcrequests_requests_proto_rawDescGZIP(), []int{4}
}

func (x *VoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VoteRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *VoteRequest) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

func (x *VoteRequest) GetCurrentCommitIndex() uint64 {
	if x != nil {
		return x.CurrentCommitIndex
	}
	return 0
}

func (x *VoteRequest) GetLastApplied() uint64 {
	if x != nil {
		return x.LastApplied
	}
	return 0
}

type VoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteGranted        bool   `protobuf:"varint,1,opt,name=voteGranted,proto3" json:"voteGranted,omitempty"`
	CurrentTerm        uint64 `protobuf:"varint,2,opt,name=currentTerm,proto3" json:"currentTerm,omitempty"`
	CurrentCommitIndex uint64 `protobuf:"varint,3,opt,name=currentCommitIndex,proto3" json:"currentCommitIndex,omitempty"`
	LastApplied        uint64 `protobuf:"varint,4,opt,name=lastApplied,proto3" json:"lastApplied,omitempty"`
	AlreadyVoted       bool   `protobuf:"varint,5,opt,name=alreadyVoted,proto3" json:"alreadyVoted,omitempty"`
	PeerID             string `protobuf:"bytes,6,opt,name=peerID,proto3" json:"peerID,omitempty"`
	NewLeaderDetected  bool   `protobuf:"varint,7,opt,name=newLeaderDetected,proto3" json:"newLeaderDetected,omitempty"`
	RequesterStepDown  bool   `protobuf:"varint,8,opt,name=requesterStepDown,proto3" json:"requesterStepDown,omitempty"`
}

func (x *VoteResponse) Reset() {
	*x = VoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcrequests_requests_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteResponse) ProtoMessage() {}

func (x *VoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcrequests_requests_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteResponse.ProtoReflect.Descriptor instead.
func (*VoteResponse) Descriptor() ([]byte, []int) {
	return file_grpcrequests_requests_proto_rawDescGZIP(), []int{5}
}

func (x *VoteResponse) GetVoteGranted() bool {
	if x != nil {
		return x.VoteGranted
	}
	return false
}

func (x *VoteResponse) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

func (x *VoteResponse) GetCurrentCommitIndex() uint64 {
	if x != nil {
		return x.CurrentCommitIndex
	}
	return 0
}

func (x *VoteResponse) GetLastApplied() uint64 {
	if x != nil {
		return x.LastApplied
	}
	return 0
}

func (x *VoteResponse) GetAlreadyVoted() bool {
	if x != nil {
		return x.AlreadyVoted
	}
	return false
}

func (x *VoteResponse) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

func (x *VoteResponse) GetNewLeaderDetected() bool {
	if x != nil {
		return x.NewLeaderDetected
	}
	return false
}

func (x *VoteResponse) GetRequesterStepDown() bool {
	if x != nil {
		return x.RequesterStepDown
	}
	return false
}

type SetLeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address     string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	CurrentTerm uint64 `protobuf:"varint,3,opt,name=currentTerm,proto3" json:"currentTerm,omitempty"`
}

func (x *SetLeaderRequest) Reset() {
	*x = SetLeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcrequests_requests_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLeaderRequest) ProtoMessage() {}

func (x *SetLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcrequests_requests_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLeaderRequest.ProtoReflect.Descriptor instead.
func (*SetLeaderRequest) Descriptor() ([]byte, []int) {
	return file_grpcrequests_requests_proto_rawDescGZIP(), []int{6}
}

func (x *SetLeaderRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetLeaderRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SetLeaderRequest) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

type SetLeaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SetLeaderResponse) Reset() {
	*x = SetLeaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcrequests_requests_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLeaderResponse) ProtoMessage() {}

func (x *SetLeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcrequests_requests_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLeaderResponse.ProtoReflect.Descriptor instead.
func (*SetLeaderResponse) Descriptor() ([]byte, []int) {
	return file_grpcrequests_requests_proto_rawDescGZIP(), []int{7}
}

func (x *SetLeaderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetLeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID      string `protobuf:"bytes,1,opt,name=peerID,proto3" json:"peerID,omitempty"`
	PeerAddress string `protobuf:"bytes,2,opt,name=peerAddress,proto3" json:"peerAddress,omitempty"`
}

func (x *GetLeaderRequest) Reset() {
	*x = GetLeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcrequests_requests_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaderRequest) ProtoMessage() {}

func (x *GetLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcrequests_requests_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaderRequest.ProtoReflect.Descriptor instead.
func (*GetLeaderRequest) Descriptor() ([]byte, []int) {
	return file_grpcrequests_requests_proto_rawDescGZIP(), []int{8}
}

func (x *GetLeaderRequest) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

func (x *GetLeaderRequest) GetPeerAddress() string {
	if x != nil {
		return x.PeerAddress
	}
	return ""
}

type GetLeaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderID      string `protobuf:"bytes,1,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	LeaderAddress string `protobuf:"bytes,2,opt,name=leaderAddress,proto3" json:"leaderAddress,omitempty"`
	PeerID        string `protobuf:"bytes,3,opt,name=peerID,proto3" json:"peerID,omitempty"`
}

func (x *GetLeaderResponse) Reset() {
	*x = GetLeaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcrequests_requests_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaderResponse) ProtoMessage() {}

func (x *GetLeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcrequests_requests_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaderResponse.ProtoReflect.Descriptor instead.
func (*GetLeaderResponse) Descriptor() ([]byte, []int) {
	return file_grpcrequests_requests_proto_rawDescGZIP(), []int{9}
}

func (x *GetLeaderResponse) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *GetLeaderResponse) GetLeaderAddress() string {
	if x != nil {
		return x.LeaderAddress
	}
	return ""
}

func (x *GetLeaderResponse) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

type SendAppendEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderID           string `protobuf:"bytes,1,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	CurrentTerm        uint64 `protobuf:"varint,2,opt,name=currentTerm,proto3" json:"currentTerm,omitempty"`
	CurrentCommitIndex uint64 `protobuf:"varint,3,opt,name=currentCommitIndex,proto3" json:"currentCommitIndex,omitempty"`
	LastApplied        uint64 `protobuf:"varint,4,opt,name=lastApplied,proto3" json:"lastApplied,omitempty"`
}

func (x *SendAppendEntryRequest) Reset() {
	*x = SendAppendEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcrequests_requests_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAppendEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAppendEntryRequest) ProtoMessage() {}

func (x *SendAppendEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcrequests_requests_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAppendEntryRequest.ProtoReflect.Descriptor instead.
func (*SendAppendEntryRequest) Descriptor() ([]byte, []int) {
	return file_grpcrequests_requests_proto_rawDescGZIP(), []int{10}
}

func (x *SendAppendEntryRequest) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *SendAppendEntryRequest) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

func (x *SendAppendEntryRequest) GetCurrentCommitIndex() uint64 {
	if x != nil {
		return x.CurrentCommitIndex
	}
	return 0
}

func (x *SendAppendEntryRequest) GetLastApplied() uint64 {
	if x != nil {
		return x.LastApplied
	}
	return 0
}

type SendAppendEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID             string `protobuf:"bytes,1,opt,name=peerID,proto3" json:"peerID,omitempty"`
	CurrentTerm        uint64 `protobuf:"varint,2,opt,name=currentTerm,proto3" json:"currentTerm,omitempty"`
	CurrentCommitIndex uint64 `protobuf:"varint,3,opt,name=currentCommitIndex,proto3" json:"currentCommitIndex,omitempty"`
	LastApplied        uint64 `protobuf:"varint,4,opt,name=lastApplied,proto3" json:"lastApplied,omitempty"`
	Ack                bool   `protobuf:"varint,5,opt,name=ack,proto3" json:"ack,omitempty"`
	LeaderIsBehind     bool   `protobuf:"varint,6,opt,name=leaderIsBehind,proto3" json:"leaderIsBehind,omitempty"`
}

func (x *SendAppendEntryResponse) Reset() {
	*x = SendAppendEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcrequests_requests_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAppendEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAppendEntryResponse) ProtoMessage() {}

func (x *SendAppendEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcrequests_requests_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAppendEntryResponse.ProtoReflect.Descriptor instead.
func (*SendAppendEntryResponse) Descriptor() ([]byte, []int) {
	return file_grpcrequests_requests_proto_rawDescGZIP(), []int{11}
}

func (x *SendAppendEntryResponse) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

func (x *SendAppendEntryResponse) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

func (x *SendAppendEntryResponse) GetCurrentCommitIndex() uint64 {
	if x != nil {
		return x.CurrentCommitIndex
	}
	return 0
}

func (x *SendAppendEntryResponse) GetLastApplied() uint64 {
	if x != nil {
		return x.LastApplied
	}
	return 0
}

func (x *SendAppendEntryResponse) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

func (x *SendAppendEntryResponse) GetLeaderIsBehind() bool {
	if x != nil {
		return x.LeaderIsBehind
	}
	return false
}

type SendHeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderID      string `protobuf:"bytes,1,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	LeaderAddress string `protobuf:"bytes,3,opt,name=leaderAddress,proto3" json:"leaderAddress,omitempty"`
	CurrentTerm   uint64 `protobuf:"varint,2,opt,name=currentTerm,proto3" json:"currentTerm,omitempty"`
}

func (x *SendHeartbeatRequest) Reset() {
	*x = SendHeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcrequests_requests_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendHeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendHeartbeatRequest) ProtoMessage() {}

func (x *SendHeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcrequests_requests_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendHeartbeatRequest.ProtoReflect.Descriptor instead.
func (*SendHeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_grpcrequests_requests_proto_rawDescGZIP(), []int{12}
}

func (x *SendHeartbeatRequest) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *SendHeartbeatRequest) GetLeaderAddress() string {
	if x != nil {
		return x.LeaderAddress
	}
	return ""
}

func (x *SendHeartbeatRequest) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

type SendHeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID          string `protobuf:"bytes,1,opt,name=peerID,proto3" json:"peerID,omitempty"`
	CurrentTerm     uint64 `protobuf:"varint,2,opt,name=currentTerm,proto3" json:"currentTerm,omitempty"`
	MultipleLeaders bool   `protobuf:"varint,3,opt,name=multipleLeaders,proto3" json:"multipleLeaders,omitempty"`
}

func (x *SendHeartbeatResponse) Reset() {
	*x = SendHeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcrequests_requests_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendHeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendHeartbeatResponse) ProtoMessage() {}

func (x *SendHeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcrequests_requests_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendHeartbeatResponse.ProtoReflect.Descriptor instead.
func (*SendHeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_grpcrequests_requests_proto_rawDescGZIP(), []int{13}
}

func (x *SendHeartbeatResponse) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

func (x *SendHeartbeatResponse) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

func (x *SendHeartbeatResponse) GetMultipleLeaders() bool {
	if x != nil {
		return x.MultipleLeaders
	}
	return false
}

type SendNotifyShutdownRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *SendNotifyShutdownRequest) Reset() {
	*x = SendNotifyShutdownRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcrequests_requests_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendNotifyShutdownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotifyShutdownRequest) ProtoMessage() {}

func (x *SendNotifyShutdownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcrequests_requests_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotifyShutdownRequest.ProtoReflect.Descriptor instead.
func (*SendNotifyShutdownRequest) Descriptor() ([]byte, []int) {
	return file_grpcrequests_requests_proto_rawDescGZIP(), []int{14}
}

func (x *SendNotifyShutdownRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SendNotifyShutdownRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

var File_grpcrequests_requests_proto protoreflect.FileDescriptor

var file_grpcrequests_requests_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x67, 0x72, 0x70, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x67,
	0x72, 0x70, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a, 0x0c, 0x48, 0x65, 0x6c, 0x6c,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x0a,
	0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x58, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x22, 0x61,
	0x0a, 0x0f, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72,
	0x6d, 0x22, 0xa7, 0x01, 0x0a, 0x0b, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x22, 0xbc, 0x02, 0x0a, 0x0c,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x76, 0x6f, 0x74, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d,
	0x12, 0x2e, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x56, 0x6f, 0x74,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x56, 0x6f, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2c,
	0x0a, 0x11, 0x6e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6e, 0x65, 0x77, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x44, 0x6f, 0x77,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x22, 0x5e, 0x0a, 0x10, 0x53, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x22, 0x2d, 0x0a, 0x11, 0x53, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4c, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x6d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x22, 0xa8, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x41,
	0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x12,
	0x2e, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65,
	0x64, 0x22, 0xdf, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x54, 0x65, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x61,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x73, 0x42, 0x65, 0x68, 0x69, 0x6e, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x73, 0x42, 0x65, 0x68,
	0x69, 0x6e, 0x64, 0x22, 0x7a, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x22,
	0x7b, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65,
	0x72, 0x6d, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0x45, 0x0a, 0x19,
	0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f,
	0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x32, 0x4d, 0x0a, 0x07, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x12, 0x42,
	0x0a, 0x08, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x32, 0xe9, 0x04, 0x0a, 0x05, 0x52, 0x61, 0x66, 0x74, 0x79, 0x12, 0x53, 0x0a, 0x12,
	0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e,
	0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x56,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a,
	0x09, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a,
	0x18, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x27, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x26,
	0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x6f, 0x72,
	0x64, 0x2d, 0x59, 0x2f, 0x72, 0x61, 0x66, 0x74, 0x79, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpcrequests_requests_proto_rawDescOnce sync.Once
	file_grpcrequests_requests_proto_rawDescData = file_grpcrequests_requests_proto_rawDesc
)

func file_grpcrequests_requests_proto_rawDescGZIP() []byte {
	file_grpcrequests_requests_proto_rawDescOnce.Do(func() {
		file_grpcrequests_requests_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpcrequests_requests_proto_rawDescData)
	})
	return file_grpcrequests_requests_proto_rawDescData
}

var file_grpcrequests_requests_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_grpcrequests_requests_proto_goTypes = []interface{}{
	(*HelloRequest)(nil),              // 0: grpcrequests.HelloRequest
	(*HelloReply)(nil),                // 1: grpcrequests.HelloReply
	(*PreVoteRequest)(nil),            // 2: grpcrequests.PreVoteRequest
	(*PreVoteResponse)(nil),           // 3: grpcrequests.PreVoteResponse
	(*VoteRequest)(nil),               // 4: grpcrequests.VoteRequest
	(*VoteResponse)(nil),              // 5: grpcrequests.VoteResponse
	(*SetLeaderRequest)(nil),          // 6: grpcrequests.SetLeaderRequest
	(*SetLeaderResponse)(nil),         // 7: grpcrequests.SetLeaderResponse
	(*GetLeaderRequest)(nil),          // 8: grpcrequests.GetLeaderRequest
	(*GetLeaderResponse)(nil),         // 9: grpcrequests.GetLeaderResponse
	(*SendAppendEntryRequest)(nil),    // 10: grpcrequests.SendAppendEntryRequest
	(*SendAppendEntryResponse)(nil),   // 11: grpcrequests.SendAppendEntryResponse
	(*SendHeartbeatRequest)(nil),      // 12: grpcrequests.SendHeartbeatRequest
	(*SendHeartbeatResponse)(nil),     // 13: grpcrequests.SendHeartbeatResponse
	(*SendNotifyShutdownRequest)(nil), // 14: grpcrequests.SendNotifyShutdownRequest
	(*emptypb.Empty)(nil),             // 15: google.protobuf.Empty
}
var file_grpcrequests_requests_proto_depIdxs = []int32{
	0,  // 0: grpcrequests.Greeter.SayHello:input_type -> grpcrequests.HelloRequest
	2,  // 1: grpcrequests.Rafty.SendPreVoteRequest:input_type -> grpcrequests.PreVoteRequest
	4,  // 2: grpcrequests.Rafty.SendVoteRequest:input_type -> grpcrequests.VoteRequest
	6,  // 3: grpcrequests.Rafty.SetLeader:input_type -> grpcrequests.SetLeaderRequest
	8,  // 4: grpcrequests.Rafty.GetLeader:input_type -> grpcrequests.GetLeaderRequest
	10, // 5: grpcrequests.Rafty.SendAppendEntriesRequest:input_type -> grpcrequests.SendAppendEntryRequest
	12, // 6: grpcrequests.Rafty.SendHeartbeats:input_type -> grpcrequests.SendHeartbeatRequest
	14, // 7: grpcrequests.Rafty.SendNotifyShutdown:input_type -> grpcrequests.SendNotifyShutdownRequest
	1,  // 8: grpcrequests.Greeter.SayHello:output_type -> grpcrequests.HelloReply
	3,  // 9: grpcrequests.Rafty.SendPreVoteRequest:output_type -> grpcrequests.PreVoteResponse
	5,  // 10: grpcrequests.Rafty.SendVoteRequest:output_type -> grpcrequests.VoteResponse
	7,  // 11: grpcrequests.Rafty.SetLeader:output_type -> grpcrequests.SetLeaderResponse
	9,  // 12: grpcrequests.Rafty.GetLeader:output_type -> grpcrequests.GetLeaderResponse
	11, // 13: grpcrequests.Rafty.SendAppendEntriesRequest:output_type -> grpcrequests.SendAppendEntryResponse
	13, // 14: grpcrequests.Rafty.SendHeartbeats:output_type -> grpcrequests.SendHeartbeatResponse
	15, // 15: grpcrequests.Rafty.SendNotifyShutdown:output_type -> google.protobuf.Empty
	8,  // [8:16] is the sub-list for method output_type
	0,  // [0:8] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_grpcrequests_requests_proto_init() }
func file_grpcrequests_requests_proto_init() {
	if File_grpcrequests_requests_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpcrequests_requests_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcrequests_requests_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcrequests_requests_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreVoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcrequests_requests_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreVoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcrequests_requests_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcrequests_requests_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcrequests_requests_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcrequests_requests_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLeaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcrequests_requests_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcrequests_requests_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcrequests_requests_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAppendEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcrequests_requests_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAppendEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcrequests_requests_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendHeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcrequests_requests_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendHeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcrequests_requests_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendNotifyShutdownRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpcrequests_requests_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_grpcrequests_requests_proto_goTypes,
		DependencyIndexes: file_grpcrequests_requests_proto_depIdxs,
		MessageInfos:      file_grpcrequests_requests_proto_msgTypes,
	}.Build()
	File_grpcrequests_requests_proto = out.File
	file_grpcrequests_requests_proto_rawDesc = nil
	file_grpcrequests_requests_proto_goTypes = nil
	file_grpcrequests_requests_proto_depIdxs = nil
}
