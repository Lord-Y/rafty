syntax = "proto3";

option go_package = "github.com/Lord-Y/rafty/grpcrequests";

import "google/protobuf/empty.proto";

package grpcrequests;

message HelloRequest {
  string name = 1;
}

message HelloReply {
  string message = 1;
}

service Greeter {
  rpc SayHello(HelloRequest) returns (HelloReply) {}
}

message PreVoteRequest {
  string id = 1;
  string state = 2;
  uint64 currentTerm = 3;
}

message PreVoteResponse {
  string peerID = 1;
  string state = 2;
  uint64 currentTerm = 3;
}

message VoteRequest {
  string id = 1;
  string state = 2;
  uint64 currentTerm = 3;
  uint64 currentCommitIndex = 4;
  uint64 lastApplied = 5;
}

message VoteResponse {
  bool voteGranted = 1;
  uint64 currentTerm = 2;
  uint64 currentCommitIndex = 3;
  uint64 lastApplied = 4;
  bool alreadyVoted = 5;
  string peerID = 6;
  bool newLeaderDetected = 7;
  bool requesterStepDown = 8;
}

message SetLeaderRequest {
  string id = 1;
  string address = 2;
  uint64 currentTerm = 3;
}

message SetLeaderResponse {
  string message = 1;
}

message GetLeaderRequest {
  string peerID = 1;
  string peerAddress = 2;
}

message GetLeaderResponse {
  string leaderID = 1;
  string leaderAddress = 2;
  string peerID = 3;
}

message SendAppendEntryRequest {
  string leaderID = 1;
  uint64 currentTerm = 2;
  uint64 currentCommitIndex = 3;
  uint64 lastApplied = 4;
}

message SendAppendEntryResponse {
  string peerID = 1;
  uint64 currentTerm = 2;
  uint64 currentCommitIndex = 3;
  uint64 lastApplied = 4;
  bool ack = 5;
  bool leaderIsBehind = 6;
}

message SendHeartbeatRequest {
  string leaderID = 1;
  string leaderAddress = 3;
  uint64 currentTerm = 2;
}

message SendHeartbeatResponse {
  string peerID = 1;
  uint64 currentTerm = 2;
  bool multipleLeaders = 3;
}

message SendNotifyShutdownRequest {
  string id = 1; 
  string address = 2; 
}

service Rafty {
  rpc SendPreVoteRequest(PreVoteRequest) returns (PreVoteResponse) {}
  rpc SendVoteRequest(VoteRequest) returns (VoteResponse) {}
  rpc SetLeader(SetLeaderRequest) returns (SetLeaderResponse) {}
  rpc GetLeader(GetLeaderRequest) returns (GetLeaderResponse) {}
  rpc SendAppendEntriesRequest(SendAppendEntryRequest) returns (SendAppendEntryResponse) {}
  rpc SendHeartbeats(SendHeartbeatRequest) returns (SendHeartbeatResponse) {}
  rpc SendNotifyShutdown(SendNotifyShutdownRequest) returns (google.protobuf.Empty) {}
}
