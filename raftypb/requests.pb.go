// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.29.3
// source: raftypb/requests.proto

package raftypb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PreVoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State       string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	CurrentTerm uint64 `protobuf:"varint,3,opt,name=currentTerm,proto3" json:"currentTerm,omitempty"`
}

func (x *PreVoteRequest) Reset() {
	*x = PreVoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftypb_requests_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreVoteRequest) ProtoMessage() {}

func (x *PreVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreVoteRequest.ProtoReflect.Descriptor instead.
func (*PreVoteRequest) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{0}
}

func (x *PreVoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PreVoteRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *PreVoteRequest) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

type PreVoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID      string `protobuf:"bytes,1,opt,name=peerID,proto3" json:"peerID,omitempty"`
	State       string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	CurrentTerm uint64 `protobuf:"varint,3,opt,name=currentTerm,proto3" json:"currentTerm,omitempty"`
}

func (x *PreVoteResponse) Reset() {
	*x = PreVoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftypb_requests_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreVoteResponse) ProtoMessage() {}

func (x *PreVoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreVoteResponse.ProtoReflect.Descriptor instead.
func (*PreVoteResponse) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{1}
}

func (x *PreVoteResponse) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

func (x *PreVoteResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *PreVoteResponse) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

type VoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CandidateId      string `protobuf:"bytes,1,opt,name=candidateId,proto3" json:"candidateId,omitempty"`
	CandidateAddress string `protobuf:"bytes,2,opt,name=candidateAddress,proto3" json:"candidateAddress,omitempty"`
	State            string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	CurrentTerm      uint64 `protobuf:"varint,4,opt,name=currentTerm,proto3" json:"currentTerm,omitempty"`
	LastLogIndex     uint64 `protobuf:"varint,5,opt,name=lastLogIndex,proto3" json:"lastLogIndex,omitempty"`
	LastLogTerm      uint64 `protobuf:"varint,6,opt,name=lastLogTerm,proto3" json:"lastLogTerm,omitempty"`
}

func (x *VoteRequest) Reset() {
	*x = VoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftypb_requests_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteRequest) ProtoMessage() {}

func (x *VoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteRequest.ProtoReflect.Descriptor instead.
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{2}
}

func (x *VoteRequest) GetCandidateId() string {
	if x != nil {
		return x.CandidateId
	}
	return ""
}

func (x *VoteRequest) GetCandidateAddress() string {
	if x != nil {
		return x.CandidateAddress
	}
	return ""
}

func (x *VoteRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *VoteRequest) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

func (x *VoteRequest) GetLastLogIndex() uint64 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

func (x *VoteRequest) GetLastLogTerm() uint64 {
	if x != nil {
		return x.LastLogTerm
	}
	return 0
}

type VoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteGranted       bool   `protobuf:"varint,1,opt,name=voteGranted,proto3" json:"voteGranted,omitempty"`
	CurrentTerm       uint64 `protobuf:"varint,2,opt,name=currentTerm,proto3" json:"currentTerm,omitempty"`
	PeerID            string `protobuf:"bytes,3,opt,name=peerID,proto3" json:"peerID,omitempty"`
	NewLeaderDetected bool   `protobuf:"varint,4,opt,name=newLeaderDetected,proto3" json:"newLeaderDetected,omitempty"`
	RequesterStepDown bool   `protobuf:"varint,5,opt,name=requesterStepDown,proto3" json:"requesterStepDown,omitempty"`
}

func (x *VoteResponse) Reset() {
	*x = VoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftypb_requests_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteResponse) ProtoMessage() {}

func (x *VoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteResponse.ProtoReflect.Descriptor instead.
func (*VoteResponse) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{3}
}

func (x *VoteResponse) GetVoteGranted() bool {
	if x != nil {
		return x.VoteGranted
	}
	return false
}

func (x *VoteResponse) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

func (x *VoteResponse) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

func (x *VoteResponse) GetNewLeaderDetected() bool {
	if x != nil {
		return x.NewLeaderDetected
	}
	return false
}

func (x *VoteResponse) GetRequesterStepDown() bool {
	if x != nil {
		return x.RequesterStepDown
	}
	return false
}

type LogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// should be uint8 but doesn't exist in pb,
	// so we take the closest type
	FileFormat uint32 `protobuf:"varint,1,opt,name=fileFormat,proto3" json:"fileFormat,omitempty"`
	// should be uint8 but doesn't exist in pb,
	// so we take the closest type
	Tombstone uint32 `protobuf:"varint,2,opt,name=tombstone,proto3" json:"tombstone,omitempty"`
	TimeStamp uint32 `protobuf:"varint,3,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	Term      uint64 `protobuf:"varint,4,opt,name=term,proto3" json:"term,omitempty"`
	Command   []byte `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftypb_requests_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{4}
}

func (x *LogEntry) GetFileFormat() uint32 {
	if x != nil {
		return x.FileFormat
	}
	return 0
}

func (x *LogEntry) GetTombstone() uint32 {
	if x != nil {
		return x.Tombstone
	}
	return 0
}

func (x *LogEntry) GetTimeStamp() uint32 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *LogEntry) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *LogEntry) GetCommand() []byte {
	if x != nil {
		return x.Command
	}
	return nil
}

type AppendEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderID          string      `protobuf:"bytes,1,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	LeaderAddress     string      `protobuf:"bytes,2,opt,name=leaderAddress,proto3" json:"leaderAddress,omitempty"`
	Term              uint64      `protobuf:"varint,3,opt,name=term,proto3" json:"term,omitempty"`
	PrevLogIndex      uint64      `protobuf:"varint,4,opt,name=prevLogIndex,proto3" json:"prevLogIndex,omitempty"`
	PrevLogTerm       uint64      `protobuf:"varint,5,opt,name=prevLogTerm,proto3" json:"prevLogTerm,omitempty"`
	Entries           []*LogEntry `protobuf:"bytes,6,rep,name=entries,proto3" json:"entries,omitempty"`
	LeaderCommitIndex uint64      `protobuf:"varint,7,opt,name=leaderCommitIndex,proto3" json:"leaderCommitIndex,omitempty"`
	Heartbeat         bool        `protobuf:"varint,8,opt,name=heartbeat,proto3" json:"heartbeat,omitempty"`
}

func (x *AppendEntryRequest) Reset() {
	*x = AppendEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftypb_requests_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntryRequest) ProtoMessage() {}

func (x *AppendEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntryRequest.ProtoReflect.Descriptor instead.
func (*AppendEntryRequest) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{5}
}

func (x *AppendEntryRequest) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *AppendEntryRequest) GetLeaderAddress() string {
	if x != nil {
		return x.LeaderAddress
	}
	return ""
}

func (x *AppendEntryRequest) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntryRequest) GetPrevLogIndex() uint64 {
	if x != nil {
		return x.PrevLogIndex
	}
	return 0
}

func (x *AppendEntryRequest) GetPrevLogTerm() uint64 {
	if x != nil {
		return x.PrevLogTerm
	}
	return 0
}

func (x *AppendEntryRequest) GetEntries() []*LogEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *AppendEntryRequest) GetLeaderCommitIndex() uint64 {
	if x != nil {
		return x.LeaderCommitIndex
	}
	return 0
}

func (x *AppendEntryRequest) GetHeartbeat() bool {
	if x != nil {
		return x.Heartbeat
	}
	return false
}

type AppendEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term    uint64 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *AppendEntryResponse) Reset() {
	*x = AppendEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftypb_requests_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntryResponse) ProtoMessage() {}

func (x *AppendEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntryResponse.ProtoReflect.Descriptor instead.
func (*AppendEntryResponse) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{6}
}

func (x *AppendEntryResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type AskNodeIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AskNodeIDRequest) Reset() {
	*x = AskNodeIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftypb_requests_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskNodeIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskNodeIDRequest) ProtoMessage() {}

func (x *AskNodeIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskNodeIDRequest.ProtoReflect.Descriptor instead.
func (*AskNodeIDRequest) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{7}
}

func (x *AskNodeIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AskNodeIDRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type AskNodeIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID        string `protobuf:"bytes,1,opt,name=peerID,proto3" json:"peerID,omitempty"`
	ReadOnlyNode  bool   `protobuf:"varint,2,opt,name=readOnlyNode,proto3" json:"readOnlyNode,omitempty"`
	LeaderID      string `protobuf:"bytes,3,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	LeaderAddress string `protobuf:"bytes,4,opt,name=leaderAddress,proto3" json:"leaderAddress,omitempty"`
}

func (x *AskNodeIDResponse) Reset() {
	*x = AskNodeIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftypb_requests_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskNodeIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskNodeIDResponse) ProtoMessage() {}

func (x *AskNodeIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskNodeIDResponse.ProtoReflect.Descriptor instead.
func (*AskNodeIDResponse) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{8}
}

func (x *AskNodeIDResponse) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

func (x *AskNodeIDResponse) GetReadOnlyNode() bool {
	if x != nil {
		return x.ReadOnlyNode
	}
	return false
}

func (x *AskNodeIDResponse) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *AskNodeIDResponse) GetLeaderAddress() string {
	if x != nil {
		return x.LeaderAddress
	}
	return ""
}

type ClientGetLeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ClientGetLeaderRequest) Reset() {
	*x = ClientGetLeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftypb_requests_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientGetLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGetLeaderRequest) ProtoMessage() {}

func (x *ClientGetLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGetLeaderRequest.ProtoReflect.Descriptor instead.
func (*ClientGetLeaderRequest) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{9}
}

func (x *ClientGetLeaderRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ClientGetLeaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderID      string `protobuf:"bytes,1,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	LeaderAddress string `protobuf:"bytes,2,opt,name=leaderAddress,proto3" json:"leaderAddress,omitempty"`
}

func (x *ClientGetLeaderResponse) Reset() {
	*x = ClientGetLeaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftypb_requests_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientGetLeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGetLeaderResponse) ProtoMessage() {}

func (x *ClientGetLeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGetLeaderResponse.ProtoReflect.Descriptor instead.
func (*ClientGetLeaderResponse) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{10}
}

func (x *ClientGetLeaderResponse) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *ClientGetLeaderResponse) GetLeaderAddress() string {
	if x != nil {
		return x.LeaderAddress
	}
	return ""
}

type GetLeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID      string `protobuf:"bytes,1,opt,name=peerID,proto3" json:"peerID,omitempty"`
	PeerAddress string `protobuf:"bytes,2,opt,name=peerAddress,proto3" json:"peerAddress,omitempty"`
}

func (x *GetLeaderRequest) Reset() {
	*x = GetLeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftypb_requests_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaderRequest) ProtoMessage() {}

func (x *GetLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaderRequest.ProtoReflect.Descriptor instead.
func (*GetLeaderRequest) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{11}
}

func (x *GetLeaderRequest) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

func (x *GetLeaderRequest) GetPeerAddress() string {
	if x != nil {
		return x.PeerAddress
	}
	return ""
}

type GetLeaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderID      string `protobuf:"bytes,1,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	LeaderAddress string `protobuf:"bytes,2,opt,name=leaderAddress,proto3" json:"leaderAddress,omitempty"`
	PeerID        string `protobuf:"bytes,3,opt,name=peerID,proto3" json:"peerID,omitempty"`
}

func (x *GetLeaderResponse) Reset() {
	*x = GetLeaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftypb_requests_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaderResponse) ProtoMessage() {}

func (x *GetLeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaderResponse.ProtoReflect.Descriptor instead.
func (*GetLeaderResponse) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{12}
}

func (x *GetLeaderResponse) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *GetLeaderResponse) GetLeaderAddress() string {
	if x != nil {
		return x.LeaderAddress
	}
	return ""
}

func (x *GetLeaderResponse) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

type ForwardCommandToLeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command []byte `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *ForwardCommandToLeaderRequest) Reset() {
	*x = ForwardCommandToLeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftypb_requests_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardCommandToLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardCommandToLeaderRequest) ProtoMessage() {}

func (x *ForwardCommandToLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardCommandToLeaderRequest.ProtoReflect.Descriptor instead.
func (*ForwardCommandToLeaderRequest) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{13}
}

func (x *ForwardCommandToLeaderRequest) GetCommand() []byte {
	if x != nil {
		return x.Command
	}
	return nil
}

type ForwardCommandToLeaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ForwardCommandToLeaderResponse) Reset() {
	*x = ForwardCommandToLeaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftypb_requests_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardCommandToLeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardCommandToLeaderResponse) ProtoMessage() {}

func (x *ForwardCommandToLeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardCommandToLeaderResponse.ProtoReflect.Descriptor instead.
func (*ForwardCommandToLeaderResponse) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{14}
}

func (x *ForwardCommandToLeaderResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ForwardCommandToLeaderResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type PersistMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CurrentTerm uint64 `protobuf:"varint,2,opt,name=currentTerm,proto3" json:"currentTerm,omitempty"`
	VotedFor    string `protobuf:"bytes,3,opt,name=votedFor,proto3" json:"votedFor,omitempty"`
}

func (x *PersistMetadata) Reset() {
	*x = PersistMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftypb_requests_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersistMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersistMetadata) ProtoMessage() {}

func (x *PersistMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersistMetadata.ProtoReflect.Descriptor instead.
func (*PersistMetadata) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{15}
}

func (x *PersistMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PersistMetadata) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

func (x *PersistMetadata) GetVotedFor() string {
	if x != nil {
		return x.VotedFor
	}
	return ""
}

var File_raftypb_requests_proto protoreflect.FileDescriptor

var file_raftypb_requests_proto_rawDesc = []byte{
	0x0a, 0x16, 0x72, 0x61, 0x66, 0x74, 0x79, 0x70, 0x62, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x61, 0x66, 0x74, 0x79, 0x70,
	0x62, 0x22, 0x58, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x22, 0x61, 0x0a, 0x0f, 0x50,
	0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x22, 0xd9,
	0x01, 0x0a, 0x0b, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x54, 0x65, 0x72, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c,
	0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x22, 0xc6, 0x01, 0x0a, 0x0c, 0x56,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x76,
	0x6f, 0x74, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x65, 0x77, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x6e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x44,
	0x6f, 0x77, 0x6e, 0x22, 0x94, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xa9, 0x02, 0x0a, 0x12, 0x41,
	0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x4c,
	0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70,
	0x72, 0x65, 0x76, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x72, 0x65, 0x76, 0x4c, 0x6f, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x4c, 0x6f, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x2b, 0x0a,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x72, 0x61, 0x66, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x22, 0x43, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x65, 0x72,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x3c, 0x0a, 0x10, 0x41,
	0x73, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x41, 0x73,
	0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x4f,
	0x6e, 0x6c, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x72,
	0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x32, 0x0a,
	0x16, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x5b, 0x0a, 0x17, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4c,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x65, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x6d, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x22, 0x39, 0x0a, 0x1d, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x4a, 0x0a, 0x1e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x5f, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x54, 0x65, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x64,
	0x46, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x64,
	0x46, 0x6f, 0x72, 0x32, 0xbe, 0x04, 0x0a, 0x05, 0x52, 0x61, 0x66, 0x74, 0x79, 0x12, 0x49, 0x0a,
	0x12, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x65, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72,
	0x61, 0x66, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x72, 0x61,
	0x66, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x2e,
	0x72, 0x61, 0x66, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x72, 0x61, 0x66, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47,
	0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x19, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x61, 0x66,
	0x74, 0x79, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64,
	0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x41,
	0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x65,
	0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x44, 0x0a, 0x09, 0x41, 0x73, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x19,
	0x2e, 0x72, 0x61, 0x66, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x6b, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x61, 0x66, 0x74,
	0x79, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x16, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x26, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x4c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x61, 0x66, 0x74,
	0x79, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x54, 0x6f, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x4c, 0x6f, 0x72, 0x64, 0x2d, 0x59, 0x2f, 0x72, 0x61, 0x66, 0x74, 0x79, 0x2f,
	0x72, 0x61, 0x66, 0x74, 0x79, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_raftypb_requests_proto_rawDescOnce sync.Once
	file_raftypb_requests_proto_rawDescData = file_raftypb_requests_proto_rawDesc
)

func file_raftypb_requests_proto_rawDescGZIP() []byte {
	file_raftypb_requests_proto_rawDescOnce.Do(func() {
		file_raftypb_requests_proto_rawDescData = protoimpl.X.CompressGZIP(file_raftypb_requests_proto_rawDescData)
	})
	return file_raftypb_requests_proto_rawDescData
}

var file_raftypb_requests_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_raftypb_requests_proto_goTypes = []interface{}{
	(*PreVoteRequest)(nil),                 // 0: raftypb.PreVoteRequest
	(*PreVoteResponse)(nil),                // 1: raftypb.PreVoteResponse
	(*VoteRequest)(nil),                    // 2: raftypb.VoteRequest
	(*VoteResponse)(nil),                   // 3: raftypb.VoteResponse
	(*LogEntry)(nil),                       // 4: raftypb.LogEntry
	(*AppendEntryRequest)(nil),             // 5: raftypb.AppendEntryRequest
	(*AppendEntryResponse)(nil),            // 6: raftypb.AppendEntryResponse
	(*AskNodeIDRequest)(nil),               // 7: raftypb.AskNodeIDRequest
	(*AskNodeIDResponse)(nil),              // 8: raftypb.AskNodeIDResponse
	(*ClientGetLeaderRequest)(nil),         // 9: raftypb.ClientGetLeaderRequest
	(*ClientGetLeaderResponse)(nil),        // 10: raftypb.ClientGetLeaderResponse
	(*GetLeaderRequest)(nil),               // 11: raftypb.GetLeaderRequest
	(*GetLeaderResponse)(nil),              // 12: raftypb.GetLeaderResponse
	(*ForwardCommandToLeaderRequest)(nil),  // 13: raftypb.ForwardCommandToLeaderRequest
	(*ForwardCommandToLeaderResponse)(nil), // 14: raftypb.ForwardCommandToLeaderResponse
	(*PersistMetadata)(nil),                // 15: raftypb.PersistMetadata
}
var file_raftypb_requests_proto_depIdxs = []int32{
	4,  // 0: raftypb.AppendEntryRequest.entries:type_name -> raftypb.LogEntry
	0,  // 1: raftypb.Rafty.SendPreVoteRequest:input_type -> raftypb.PreVoteRequest
	2,  // 2: raftypb.Rafty.SendVoteRequest:input_type -> raftypb.VoteRequest
	9,  // 3: raftypb.Rafty.ClientGetLeader:input_type -> raftypb.ClientGetLeaderRequest
	11, // 4: raftypb.Rafty.GetLeader:input_type -> raftypb.GetLeaderRequest
	5,  // 5: raftypb.Rafty.SendAppendEntriesRequest:input_type -> raftypb.AppendEntryRequest
	7,  // 6: raftypb.Rafty.AskNodeID:input_type -> raftypb.AskNodeIDRequest
	13, // 7: raftypb.Rafty.ForwardCommandToLeader:input_type -> raftypb.ForwardCommandToLeaderRequest
	1,  // 8: raftypb.Rafty.SendPreVoteRequest:output_type -> raftypb.PreVoteResponse
	3,  // 9: raftypb.Rafty.SendVoteRequest:output_type -> raftypb.VoteResponse
	10, // 10: raftypb.Rafty.ClientGetLeader:output_type -> raftypb.ClientGetLeaderResponse
	12, // 11: raftypb.Rafty.GetLeader:output_type -> raftypb.GetLeaderResponse
	6,  // 12: raftypb.Rafty.SendAppendEntriesRequest:output_type -> raftypb.AppendEntryResponse
	8,  // 13: raftypb.Rafty.AskNodeID:output_type -> raftypb.AskNodeIDResponse
	14, // 14: raftypb.Rafty.ForwardCommandToLeader:output_type -> raftypb.ForwardCommandToLeaderResponse
	8,  // [8:15] is the sub-list for method output_type
	1,  // [1:8] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_raftypb_requests_proto_init() }
func file_raftypb_requests_proto_init() {
	if File_raftypb_requests_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_raftypb_requests_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreVoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftypb_requests_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreVoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftypb_requests_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftypb_requests_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftypb_requests_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftypb_requests_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftypb_requests_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftypb_requests_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskNodeIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftypb_requests_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskNodeIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftypb_requests_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientGetLeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftypb_requests_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientGetLeaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftypb_requests_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftypb_requests_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftypb_requests_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardCommandToLeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftypb_requests_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardCommandToLeaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftypb_requests_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersistMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_raftypb_requests_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_raftypb_requests_proto_goTypes,
		DependencyIndexes: file_raftypb_requests_proto_depIdxs,
		MessageInfos:      file_raftypb_requests_proto_msgTypes,
	}.Build()
	File_raftypb_requests_proto = out.File
	file_raftypb_requests_proto_rawDesc = nil
	file_raftypb_requests_proto_goTypes = nil
	file_raftypb_requests_proto_depIdxs = nil
}
