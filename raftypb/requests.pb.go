// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.1
// source: raftypb/requests.proto

package raftypb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PreVoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CurrentTerm   uint64                 `protobuf:"varint,2,opt,name=current_term,json=currentTerm,proto3" json:"current_term,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreVoteRequest) Reset() {
	*x = PreVoteRequest{}
	mi := &file_raftypb_requests_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreVoteRequest) ProtoMessage() {}

func (x *PreVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreVoteRequest.ProtoReflect.Descriptor instead.
func (*PreVoteRequest) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{0}
}

func (x *PreVoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PreVoteRequest) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

type PreVoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	CurrentTerm   uint64                 `protobuf:"varint,2,opt,name=current_term,json=currentTerm,proto3" json:"current_term,omitempty"`
	Granted       bool                   `protobuf:"varint,3,opt,name=granted,proto3" json:"granted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreVoteResponse) Reset() {
	*x = PreVoteResponse{}
	mi := &file_raftypb_requests_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreVoteResponse) ProtoMessage() {}

func (x *PreVoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreVoteResponse.ProtoReflect.Descriptor instead.
func (*PreVoteResponse) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{1}
}

func (x *PreVoteResponse) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *PreVoteResponse) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

func (x *PreVoteResponse) GetGranted() bool {
	if x != nil {
		return x.Granted
	}
	return false
}

type VoteRequest struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	CandidateId                    string                 `protobuf:"bytes,1,opt,name=candidate_id,json=candidateId,proto3" json:"candidate_id,omitempty"`
	CandidateAddress               string                 `protobuf:"bytes,2,opt,name=candidate_address,json=candidateAddress,proto3" json:"candidate_address,omitempty"`
	CurrentTerm                    uint64                 `protobuf:"varint,3,opt,name=current_term,json=currentTerm,proto3" json:"current_term,omitempty"`
	LastLogIndex                   uint64                 `protobuf:"varint,4,opt,name=last_log_index,json=lastLogIndex,proto3" json:"last_log_index,omitempty"`
	LastLogTerm                    uint64                 `protobuf:"varint,5,opt,name=last_log_term,json=lastLogTerm,proto3" json:"last_log_term,omitempty"`
	CandidateForLeadershipTransfer bool                   `protobuf:"varint,6,opt,name=candidate_for_leadership_transfer,json=candidateForLeadershipTransfer,proto3" json:"candidate_for_leadership_transfer,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *VoteRequest) Reset() {
	*x = VoteRequest{}
	mi := &file_raftypb_requests_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteRequest) ProtoMessage() {}

func (x *VoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteRequest.ProtoReflect.Descriptor instead.
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{2}
}

func (x *VoteRequest) GetCandidateId() string {
	if x != nil {
		return x.CandidateId
	}
	return ""
}

func (x *VoteRequest) GetCandidateAddress() string {
	if x != nil {
		return x.CandidateAddress
	}
	return ""
}

func (x *VoteRequest) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

func (x *VoteRequest) GetLastLogIndex() uint64 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

func (x *VoteRequest) GetLastLogTerm() uint64 {
	if x != nil {
		return x.LastLogTerm
	}
	return 0
}

func (x *VoteRequest) GetCandidateForLeadershipTransfer() bool {
	if x != nil {
		return x.CandidateForLeadershipTransfer
	}
	return false
}

type VoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Granted       bool                   `protobuf:"varint,1,opt,name=granted,proto3" json:"granted,omitempty"`
	CurrentTerm   uint64                 `protobuf:"varint,2,opt,name=current_term,json=currentTerm,proto3" json:"current_term,omitempty"`
	PeerId        string                 `protobuf:"bytes,3,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteResponse) Reset() {
	*x = VoteResponse{}
	mi := &file_raftypb_requests_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteResponse) ProtoMessage() {}

func (x *VoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteResponse.ProtoReflect.Descriptor instead.
func (*VoteResponse) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{3}
}

func (x *VoteResponse) GetGranted() bool {
	if x != nil {
		return x.Granted
	}
	return false
}

func (x *VoteResponse) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

func (x *VoteResponse) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileFormat    uint32                 `protobuf:"varint,1,opt,name=file_format,json=fileFormat,proto3" json:"file_format,omitempty"`
	Tombstone     uint32                 `protobuf:"varint,2,opt,name=tombstone,proto3" json:"tombstone,omitempty"`
	LogType       uint32                 `protobuf:"varint,3,opt,name=log_type,json=logType,proto3" json:"log_type,omitempty"`
	Timestamp     uint32                 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Term          uint64                 `protobuf:"varint,5,opt,name=term,proto3" json:"term,omitempty"`
	Index         uint64                 `protobuf:"varint,6,opt,name=index,proto3" json:"index,omitempty"`
	Command       []byte                 `protobuf:"bytes,7,opt,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_raftypb_requests_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{4}
}

func (x *LogEntry) GetFileFormat() uint32 {
	if x != nil {
		return x.FileFormat
	}
	return 0
}

func (x *LogEntry) GetTombstone() uint32 {
	if x != nil {
		return x.Tombstone
	}
	return 0
}

func (x *LogEntry) GetLogType() uint32 {
	if x != nil {
		return x.LogType
	}
	return 0
}

func (x *LogEntry) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogEntry) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *LogEntry) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *LogEntry) GetCommand() []byte {
	if x != nil {
		return x.Command
	}
	return nil
}

type AppendEntryRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	LeaderId          string                 `protobuf:"bytes,1,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	LeaderAddress     string                 `protobuf:"bytes,2,opt,name=leader_address,json=leaderAddress,proto3" json:"leader_address,omitempty"`
	Term              uint64                 `protobuf:"varint,3,opt,name=term,proto3" json:"term,omitempty"`
	PrevLogIndex      uint64                 `protobuf:"varint,4,opt,name=prev_log_index,json=prevLogIndex,proto3" json:"prev_log_index,omitempty"`
	PrevLogTerm       uint64                 `protobuf:"varint,5,opt,name=prev_log_term,json=prevLogTerm,proto3" json:"prev_log_term,omitempty"`
	Entries           []*LogEntry            `protobuf:"bytes,6,rep,name=entries,proto3" json:"entries,omitempty"`
	LeaderCommitIndex uint64                 `protobuf:"varint,7,opt,name=leader_commit_index,json=leaderCommitIndex,proto3" json:"leader_commit_index,omitempty"`
	Heartbeat         bool                   `protobuf:"varint,8,opt,name=heartbeat,proto3" json:"heartbeat,omitempty"`
	Catchup           bool                   `protobuf:"varint,9,opt,name=catchup,proto3" json:"catchup,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AppendEntryRequest) Reset() {
	*x = AppendEntryRequest{}
	mi := &file_raftypb_requests_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntryRequest) ProtoMessage() {}

func (x *AppendEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntryRequest.ProtoReflect.Descriptor instead.
func (*AppendEntryRequest) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{5}
}

func (x *AppendEntryRequest) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *AppendEntryRequest) GetLeaderAddress() string {
	if x != nil {
		return x.LeaderAddress
	}
	return ""
}

func (x *AppendEntryRequest) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntryRequest) GetPrevLogIndex() uint64 {
	if x != nil {
		return x.PrevLogIndex
	}
	return 0
}

func (x *AppendEntryRequest) GetPrevLogTerm() uint64 {
	if x != nil {
		return x.PrevLogTerm
	}
	return 0
}

func (x *AppendEntryRequest) GetEntries() []*LogEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *AppendEntryRequest) GetLeaderCommitIndex() uint64 {
	if x != nil {
		return x.LeaderCommitIndex
	}
	return 0
}

func (x *AppendEntryRequest) GetHeartbeat() bool {
	if x != nil {
		return x.Heartbeat
	}
	return false
}

func (x *AppendEntryRequest) GetCatchup() bool {
	if x != nil {
		return x.Catchup
	}
	return false
}

type AppendEntryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          uint64                 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	LogNotFound   bool                   `protobuf:"varint,3,opt,name=log_not_found,json=logNotFound,proto3" json:"log_not_found,omitempty"`
	LastLogIndex  uint64                 `protobuf:"varint,4,opt,name=last_log_index,json=lastLogIndex,proto3" json:"last_log_index,omitempty"`
	LastLogTerm   uint64                 `protobuf:"varint,5,opt,name=last_log_term,json=lastLogTerm,proto3" json:"last_log_term,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendEntryResponse) Reset() {
	*x = AppendEntryResponse{}
	mi := &file_raftypb_requests_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntryResponse) ProtoMessage() {}

func (x *AppendEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntryResponse.ProtoReflect.Descriptor instead.
func (*AppendEntryResponse) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{6}
}

func (x *AppendEntryResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AppendEntryResponse) GetLogNotFound() bool {
	if x != nil {
		return x.LogNotFound
	}
	return false
}

func (x *AppendEntryResponse) GetLastLogIndex() uint64 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

func (x *AppendEntryResponse) GetLastLogTerm() uint64 {
	if x != nil {
		return x.LastLogTerm
	}
	return 0
}

type AskNodeIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AskNodeIDRequest) Reset() {
	*x = AskNodeIDRequest{}
	mi := &file_raftypb_requests_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AskNodeIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskNodeIDRequest) ProtoMessage() {}

func (x *AskNodeIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskNodeIDRequest.ProtoReflect.Descriptor instead.
func (*AskNodeIDRequest) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{7}
}

func (x *AskNodeIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AskNodeIDRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type AskNodeIDResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PeerId           string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	ReadReplica      bool                   `protobuf:"varint,2,opt,name=read_replica,json=readReplica,proto3" json:"read_replica,omitempty"`
	LeaderId         string                 `protobuf:"bytes,3,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	LeaderAddress    string                 `protobuf:"bytes,4,opt,name=leader_address,json=leaderAddress,proto3" json:"leader_address,omitempty"`
	AskForMembership bool                   `protobuf:"varint,5,opt,name=ask_for_membership,json=askForMembership,proto3" json:"ask_for_membership,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AskNodeIDResponse) Reset() {
	*x = AskNodeIDResponse{}
	mi := &file_raftypb_requests_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AskNodeIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskNodeIDResponse) ProtoMessage() {}

func (x *AskNodeIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskNodeIDResponse.ProtoReflect.Descriptor instead.
func (*AskNodeIDResponse) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{8}
}

func (x *AskNodeIDResponse) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *AskNodeIDResponse) GetReadReplica() bool {
	if x != nil {
		return x.ReadReplica
	}
	return false
}

func (x *AskNodeIDResponse) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *AskNodeIDResponse) GetLeaderAddress() string {
	if x != nil {
		return x.LeaderAddress
	}
	return ""
}

func (x *AskNodeIDResponse) GetAskForMembership() bool {
	if x != nil {
		return x.AskForMembership
	}
	return false
}

type ClientGetLeaderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientGetLeaderRequest) Reset() {
	*x = ClientGetLeaderRequest{}
	mi := &file_raftypb_requests_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientGetLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGetLeaderRequest) ProtoMessage() {}

func (x *ClientGetLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGetLeaderRequest.ProtoReflect.Descriptor instead.
func (*ClientGetLeaderRequest) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{9}
}

func (x *ClientGetLeaderRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ClientGetLeaderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeaderId      string                 `protobuf:"bytes,1,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	LeaderAddress string                 `protobuf:"bytes,2,opt,name=leader_address,json=leaderAddress,proto3" json:"leader_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientGetLeaderResponse) Reset() {
	*x = ClientGetLeaderResponse{}
	mi := &file_raftypb_requests_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientGetLeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGetLeaderResponse) ProtoMessage() {}

func (x *ClientGetLeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGetLeaderResponse.ProtoReflect.Descriptor instead.
func (*ClientGetLeaderResponse) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{10}
}

func (x *ClientGetLeaderResponse) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *ClientGetLeaderResponse) GetLeaderAddress() string {
	if x != nil {
		return x.LeaderAddress
	}
	return ""
}

type GetLeaderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	PeerAddress   string                 `protobuf:"bytes,2,opt,name=peerAddress,proto3" json:"peerAddress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLeaderRequest) Reset() {
	*x = GetLeaderRequest{}
	mi := &file_raftypb_requests_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaderRequest) ProtoMessage() {}

func (x *GetLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaderRequest.ProtoReflect.Descriptor instead.
func (*GetLeaderRequest) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{11}
}

func (x *GetLeaderRequest) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *GetLeaderRequest) GetPeerAddress() string {
	if x != nil {
		return x.PeerAddress
	}
	return ""
}

type GetLeaderResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	LeaderId         string                 `protobuf:"bytes,1,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	LeaderAddress    string                 `protobuf:"bytes,2,opt,name=leader_address,json=leaderAddress,proto3" json:"leader_address,omitempty"`
	PeerId           string                 `protobuf:"bytes,3,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	AskForMembership bool                   `protobuf:"varint,4,opt,name=ask_for_membership,json=askForMembership,proto3" json:"ask_for_membership,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetLeaderResponse) Reset() {
	*x = GetLeaderResponse{}
	mi := &file_raftypb_requests_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaderResponse) ProtoMessage() {}

func (x *GetLeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaderResponse.ProtoReflect.Descriptor instead.
func (*GetLeaderResponse) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{12}
}

func (x *GetLeaderResponse) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *GetLeaderResponse) GetLeaderAddress() string {
	if x != nil {
		return x.LeaderAddress
	}
	return ""
}

func (x *GetLeaderResponse) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *GetLeaderResponse) GetAskForMembership() bool {
	if x != nil {
		return x.AskForMembership
	}
	return false
}

type ForwardCommandToLeaderRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Command           []byte                 `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	LogType           uint32                 `protobuf:"varint,2,opt,name=log_type,json=logType,proto3" json:"log_type,omitempty"`
	MembershipAction  uint32                 `protobuf:"varint,3,opt,name=membership_action,json=membershipAction,proto3" json:"membership_action,omitempty"`
	MembershipTimeout uint32                 `protobuf:"varint,4,opt,name=membership_timeout,json=membershipTimeout,proto3" json:"membership_timeout,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ForwardCommandToLeaderRequest) Reset() {
	*x = ForwardCommandToLeaderRequest{}
	mi := &file_raftypb_requests_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForwardCommandToLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardCommandToLeaderRequest) ProtoMessage() {}

func (x *ForwardCommandToLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardCommandToLeaderRequest.ProtoReflect.Descriptor instead.
func (*ForwardCommandToLeaderRequest) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{13}
}

func (x *ForwardCommandToLeaderRequest) GetCommand() []byte {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *ForwardCommandToLeaderRequest) GetLogType() uint32 {
	if x != nil {
		return x.LogType
	}
	return 0
}

func (x *ForwardCommandToLeaderRequest) GetMembershipAction() uint32 {
	if x != nil {
		return x.MembershipAction
	}
	return 0
}

func (x *ForwardCommandToLeaderRequest) GetMembershipTimeout() uint32 {
	if x != nil {
		return x.MembershipTimeout
	}
	return 0
}

type ForwardCommandToLeaderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeaderId      string                 `protobuf:"bytes,1,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	LeaderAddress string                 `protobuf:"bytes,2,opt,name=leader_address,json=leaderAddress,proto3" json:"leader_address,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForwardCommandToLeaderResponse) Reset() {
	*x = ForwardCommandToLeaderResponse{}
	mi := &file_raftypb_requests_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForwardCommandToLeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardCommandToLeaderResponse) ProtoMessage() {}

func (x *ForwardCommandToLeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardCommandToLeaderResponse.ProtoReflect.Descriptor instead.
func (*ForwardCommandToLeaderResponse) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{14}
}

func (x *ForwardCommandToLeaderResponse) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *ForwardCommandToLeaderResponse) GetLeaderAddress() string {
	if x != nil {
		return x.LeaderAddress
	}
	return ""
}

func (x *ForwardCommandToLeaderResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ForwardCommandToLeaderResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TimeoutNowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeoutNowRequest) Reset() {
	*x = TimeoutNowRequest{}
	mi := &file_raftypb_requests_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeoutNowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeoutNowRequest) ProtoMessage() {}

func (x *TimeoutNowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeoutNowRequest.ProtoReflect.Descriptor instead.
func (*TimeoutNowRequest) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{15}
}

type TimeoutNowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeoutNowResponse) Reset() {
	*x = TimeoutNowResponse{}
	mi := &file_raftypb_requests_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeoutNowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeoutNowResponse) ProtoMessage() {}

func (x *TimeoutNowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeoutNowResponse.ProtoReflect.Descriptor instead.
func (*TimeoutNowResponse) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{16}
}

func (x *TimeoutNowResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type BootstrapClusterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootstrapClusterRequest) Reset() {
	*x = BootstrapClusterRequest{}
	mi := &file_raftypb_requests_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootstrapClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapClusterRequest) ProtoMessage() {}

func (x *BootstrapClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapClusterRequest.ProtoReflect.Descriptor instead.
func (*BootstrapClusterRequest) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{17}
}

type BootstrapClusterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootstrapClusterResponse) Reset() {
	*x = BootstrapClusterResponse{}
	mi := &file_raftypb_requests_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootstrapClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapClusterResponse) ProtoMessage() {}

func (x *BootstrapClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapClusterResponse.ProtoReflect.Descriptor instead.
func (*BootstrapClusterResponse) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{18}
}

func (x *BootstrapClusterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type InstallSnapshotRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	LeaderId               string                 `protobuf:"bytes,1,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	LeaderAddress          string                 `protobuf:"bytes,2,opt,name=leader_address,json=leaderAddress,proto3" json:"leader_address,omitempty"`
	LastIncludedIndex      uint64                 `protobuf:"varint,3,opt,name=last_included_index,json=lastIncludedIndex,proto3" json:"last_included_index,omitempty"`
	LastIncludedTerm       uint64                 `protobuf:"varint,4,opt,name=last_included_term,json=lastIncludedTerm,proto3" json:"last_included_term,omitempty"`
	LastAppliedConfigIndex uint64                 `protobuf:"varint,5,opt,name=last_applied_config_index,json=lastAppliedConfigIndex,proto3" json:"last_applied_config_index,omitempty"`
	LastAppliedConfigTerm  uint64                 `protobuf:"varint,6,opt,name=last_applied_config_term,json=lastAppliedConfigTerm,proto3" json:"last_applied_config_term,omitempty"`
	Configuration          []byte                 `protobuf:"bytes,7,opt,name=configuration,proto3" json:"configuration,omitempty"`
	Data                   []byte                 `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	Size                   uint64                 `protobuf:"varint,9,opt,name=size,proto3" json:"size,omitempty"`
	CurrentTerm            uint64                 `protobuf:"varint,10,opt,name=current_term,json=currentTerm,proto3" json:"current_term,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InstallSnapshotRequest) Reset() {
	*x = InstallSnapshotRequest{}
	mi := &file_raftypb_requests_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSnapshotRequest) ProtoMessage() {}

func (x *InstallSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSnapshotRequest.ProtoReflect.Descriptor instead.
func (*InstallSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{19}
}

func (x *InstallSnapshotRequest) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *InstallSnapshotRequest) GetLeaderAddress() string {
	if x != nil {
		return x.LeaderAddress
	}
	return ""
}

func (x *InstallSnapshotRequest) GetLastIncludedIndex() uint64 {
	if x != nil {
		return x.LastIncludedIndex
	}
	return 0
}

func (x *InstallSnapshotRequest) GetLastIncludedTerm() uint64 {
	if x != nil {
		return x.LastIncludedTerm
	}
	return 0
}

func (x *InstallSnapshotRequest) GetLastAppliedConfigIndex() uint64 {
	if x != nil {
		return x.LastAppliedConfigIndex
	}
	return 0
}

func (x *InstallSnapshotRequest) GetLastAppliedConfigTerm() uint64 {
	if x != nil {
		return x.LastAppliedConfigTerm
	}
	return 0
}

func (x *InstallSnapshotRequest) GetConfiguration() []byte {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *InstallSnapshotRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *InstallSnapshotRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *InstallSnapshotRequest) GetCurrentTerm() uint64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

type InstallSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          uint64                 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallSnapshotResponse) Reset() {
	*x = InstallSnapshotResponse{}
	mi := &file_raftypb_requests_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSnapshotResponse) ProtoMessage() {}

func (x *InstallSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raftypb_requests_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSnapshotResponse.ProtoReflect.Descriptor instead.
func (*InstallSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_raftypb_requests_proto_rawDescGZIP(), []int{20}
}

func (x *InstallSnapshotResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *InstallSnapshotResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_raftypb_requests_proto protoreflect.FileDescriptor

const file_raftypb_requests_proto_rawDesc = "" +
	"\n" +
	"\x16raftypb/requests.proto\x12\araftypb\"C\n" +
	"\x0ePreVoteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fcurrent_term\x18\x02 \x01(\x04R\vcurrentTerm\"g\n" +
	"\x0fPreVoteResponse\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\x12!\n" +
	"\fcurrent_term\x18\x02 \x01(\x04R\vcurrentTerm\x12\x18\n" +
	"\agranted\x18\x03 \x01(\bR\agranted\"\x95\x02\n" +
	"\vVoteRequest\x12!\n" +
	"\fcandidate_id\x18\x01 \x01(\tR\vcandidateId\x12+\n" +
	"\x11candidate_address\x18\x02 \x01(\tR\x10candidateAddress\x12!\n" +
	"\fcurrent_term\x18\x03 \x01(\x04R\vcurrentTerm\x12$\n" +
	"\x0elast_log_index\x18\x04 \x01(\x04R\flastLogIndex\x12\"\n" +
	"\rlast_log_term\x18\x05 \x01(\x04R\vlastLogTerm\x12I\n" +
	"!candidate_for_leadership_transfer\x18\x06 \x01(\bR\x1ecandidateForLeadershipTransfer\"d\n" +
	"\fVoteResponse\x12\x18\n" +
	"\agranted\x18\x01 \x01(\bR\agranted\x12!\n" +
	"\fcurrent_term\x18\x02 \x01(\x04R\vcurrentTerm\x12\x17\n" +
	"\apeer_id\x18\x03 \x01(\tR\x06peerId\"\xc6\x01\n" +
	"\bLogEntry\x12\x1f\n" +
	"\vfile_format\x18\x01 \x01(\rR\n" +
	"fileFormat\x12\x1c\n" +
	"\ttombstone\x18\x02 \x01(\rR\ttombstone\x12\x19\n" +
	"\blog_type\x18\x03 \x01(\rR\alogType\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\rR\ttimestamp\x12\x12\n" +
	"\x04term\x18\x05 \x01(\x04R\x04term\x12\x14\n" +
	"\x05index\x18\x06 \x01(\x04R\x05index\x12\x18\n" +
	"\acommand\x18\a \x01(\fR\acommand\"\xcb\x02\n" +
	"\x12AppendEntryRequest\x12\x1b\n" +
	"\tleader_id\x18\x01 \x01(\tR\bleaderId\x12%\n" +
	"\x0eleader_address\x18\x02 \x01(\tR\rleaderAddress\x12\x12\n" +
	"\x04term\x18\x03 \x01(\x04R\x04term\x12$\n" +
	"\x0eprev_log_index\x18\x04 \x01(\x04R\fprevLogIndex\x12\"\n" +
	"\rprev_log_term\x18\x05 \x01(\x04R\vprevLogTerm\x12+\n" +
	"\aentries\x18\x06 \x03(\v2\x11.raftypb.LogEntryR\aentries\x12.\n" +
	"\x13leader_commit_index\x18\a \x01(\x04R\x11leaderCommitIndex\x12\x1c\n" +
	"\theartbeat\x18\b \x01(\bR\theartbeat\x12\x18\n" +
	"\acatchup\x18\t \x01(\bR\acatchup\"\xb1\x01\n" +
	"\x13AppendEntryResponse\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x04R\x04term\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\"\n" +
	"\rlog_not_found\x18\x03 \x01(\bR\vlogNotFound\x12$\n" +
	"\x0elast_log_index\x18\x04 \x01(\x04R\flastLogIndex\x12\"\n" +
	"\rlast_log_term\x18\x05 \x01(\x04R\vlastLogTerm\"<\n" +
	"\x10AskNodeIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"\xc1\x01\n" +
	"\x11AskNodeIDResponse\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\x12!\n" +
	"\fread_replica\x18\x02 \x01(\bR\vreadReplica\x12\x1b\n" +
	"\tleader_id\x18\x03 \x01(\tR\bleaderId\x12%\n" +
	"\x0eleader_address\x18\x04 \x01(\tR\rleaderAddress\x12,\n" +
	"\x12ask_for_membership\x18\x05 \x01(\bR\x10askForMembership\"2\n" +
	"\x16ClientGetLeaderRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"]\n" +
	"\x17ClientGetLeaderResponse\x12\x1b\n" +
	"\tleader_id\x18\x01 \x01(\tR\bleaderId\x12%\n" +
	"\x0eleader_address\x18\x02 \x01(\tR\rleaderAddress\"M\n" +
	"\x10GetLeaderRequest\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\x12 \n" +
	"\vpeerAddress\x18\x02 \x01(\tR\vpeerAddress\"\x9e\x01\n" +
	"\x11GetLeaderResponse\x12\x1b\n" +
	"\tleader_id\x18\x01 \x01(\tR\bleaderId\x12%\n" +
	"\x0eleader_address\x18\x02 \x01(\tR\rleaderAddress\x12\x17\n" +
	"\apeer_id\x18\x03 \x01(\tR\x06peerId\x12,\n" +
	"\x12ask_for_membership\x18\x04 \x01(\bR\x10askForMembership\"\xb0\x01\n" +
	"\x1dForwardCommandToLeaderRequest\x12\x18\n" +
	"\acommand\x18\x01 \x01(\fR\acommand\x12\x19\n" +
	"\blog_type\x18\x02 \x01(\rR\alogType\x12+\n" +
	"\x11membership_action\x18\x03 \x01(\rR\x10membershipAction\x12-\n" +
	"\x12membership_timeout\x18\x04 \x01(\rR\x11membershipTimeout\"\x8e\x01\n" +
	"\x1eForwardCommandToLeaderResponse\x12\x1b\n" +
	"\tleader_id\x18\x01 \x01(\tR\bleaderId\x12%\n" +
	"\x0eleader_address\x18\x02 \x01(\tR\rleaderAddress\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"\x13\n" +
	"\x11TimeoutNowRequest\".\n" +
	"\x12TimeoutNowResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x19\n" +
	"\x17BootstrapClusterRequest\"4\n" +
	"\x18BootstrapClusterResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x9f\x03\n" +
	"\x16InstallSnapshotRequest\x12\x1b\n" +
	"\tleader_id\x18\x01 \x01(\tR\bleaderId\x12%\n" +
	"\x0eleader_address\x18\x02 \x01(\tR\rleaderAddress\x12.\n" +
	"\x13last_included_index\x18\x03 \x01(\x04R\x11lastIncludedIndex\x12,\n" +
	"\x12last_included_term\x18\x04 \x01(\x04R\x10lastIncludedTerm\x129\n" +
	"\x19last_applied_config_index\x18\x05 \x01(\x04R\x16lastAppliedConfigIndex\x127\n" +
	"\x18last_applied_config_term\x18\x06 \x01(\x04R\x15lastAppliedConfigTerm\x12$\n" +
	"\rconfiguration\x18\a \x01(\fR\rconfiguration\x12\x12\n" +
	"\x04data\x18\b \x01(\fR\x04data\x12\x12\n" +
	"\x04size\x18\t \x01(\x04R\x04size\x12!\n" +
	"\fcurrent_term\x18\n" +
	" \x01(\x04R\vcurrentTerm\"G\n" +
	"\x17InstallSnapshotResponse\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x04R\x04term\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess2\xdb\x06\n" +
	"\x05Rafty\x12I\n" +
	"\x12SendPreVoteRequest\x12\x17.raftypb.PreVoteRequest\x1a\x18.raftypb.PreVoteResponse\"\x00\x12@\n" +
	"\x0fSendVoteRequest\x12\x14.raftypb.VoteRequest\x1a\x15.raftypb.VoteResponse\"\x00\x12V\n" +
	"\x0fClientGetLeader\x12\x1f.raftypb.ClientGetLeaderRequest\x1a .raftypb.ClientGetLeaderResponse\"\x00\x12D\n" +
	"\tGetLeader\x12\x19.raftypb.GetLeaderRequest\x1a\x1a.raftypb.GetLeaderResponse\"\x00\x12W\n" +
	"\x18SendAppendEntriesRequest\x12\x1b.raftypb.AppendEntryRequest\x1a\x1c.raftypb.AppendEntryResponse\"\x00\x12D\n" +
	"\tAskNodeID\x12\x19.raftypb.AskNodeIDRequest\x1a\x1a.raftypb.AskNodeIDResponse\"\x00\x12k\n" +
	"\x16ForwardCommandToLeader\x12&.raftypb.ForwardCommandToLeaderRequest\x1a'.raftypb.ForwardCommandToLeaderResponse\"\x00\x12R\n" +
	"\x15SendTimeoutNowRequest\x12\x1a.raftypb.TimeoutNowRequest\x1a\x1b.raftypb.TimeoutNowResponse\"\x00\x12d\n" +
	"\x1bSendBootstrapClusterRequest\x12 .raftypb.BootstrapClusterRequest\x1a!.raftypb.BootstrapClusterResponse\"\x00\x12a\n" +
	"\x1aSendInstallSnapshotRequest\x12\x1f.raftypb.InstallSnapshotRequest\x1a .raftypb.InstallSnapshotResponse\"\x00B!Z\x1fgithub.com/Lord-Y/rafty/raftypbb\x06proto3"

var (
	file_raftypb_requests_proto_rawDescOnce sync.Once
	file_raftypb_requests_proto_rawDescData []byte
)

func file_raftypb_requests_proto_rawDescGZIP() []byte {
	file_raftypb_requests_proto_rawDescOnce.Do(func() {
		file_raftypb_requests_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_raftypb_requests_proto_rawDesc), len(file_raftypb_requests_proto_rawDesc)))
	})
	return file_raftypb_requests_proto_rawDescData
}

var file_raftypb_requests_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_raftypb_requests_proto_goTypes = []any{
	(*PreVoteRequest)(nil),                 // 0: raftypb.PreVoteRequest
	(*PreVoteResponse)(nil),                // 1: raftypb.PreVoteResponse
	(*VoteRequest)(nil),                    // 2: raftypb.VoteRequest
	(*VoteResponse)(nil),                   // 3: raftypb.VoteResponse
	(*LogEntry)(nil),                       // 4: raftypb.LogEntry
	(*AppendEntryRequest)(nil),             // 5: raftypb.AppendEntryRequest
	(*AppendEntryResponse)(nil),            // 6: raftypb.AppendEntryResponse
	(*AskNodeIDRequest)(nil),               // 7: raftypb.AskNodeIDRequest
	(*AskNodeIDResponse)(nil),              // 8: raftypb.AskNodeIDResponse
	(*ClientGetLeaderRequest)(nil),         // 9: raftypb.ClientGetLeaderRequest
	(*ClientGetLeaderResponse)(nil),        // 10: raftypb.ClientGetLeaderResponse
	(*GetLeaderRequest)(nil),               // 11: raftypb.GetLeaderRequest
	(*GetLeaderResponse)(nil),              // 12: raftypb.GetLeaderResponse
	(*ForwardCommandToLeaderRequest)(nil),  // 13: raftypb.ForwardCommandToLeaderRequest
	(*ForwardCommandToLeaderResponse)(nil), // 14: raftypb.ForwardCommandToLeaderResponse
	(*TimeoutNowRequest)(nil),              // 15: raftypb.TimeoutNowRequest
	(*TimeoutNowResponse)(nil),             // 16: raftypb.TimeoutNowResponse
	(*BootstrapClusterRequest)(nil),        // 17: raftypb.BootstrapClusterRequest
	(*BootstrapClusterResponse)(nil),       // 18: raftypb.BootstrapClusterResponse
	(*InstallSnapshotRequest)(nil),         // 19: raftypb.InstallSnapshotRequest
	(*InstallSnapshotResponse)(nil),        // 20: raftypb.InstallSnapshotResponse
}
var file_raftypb_requests_proto_depIdxs = []int32{
	4,  // 0: raftypb.AppendEntryRequest.entries:type_name -> raftypb.LogEntry
	0,  // 1: raftypb.Rafty.SendPreVoteRequest:input_type -> raftypb.PreVoteRequest
	2,  // 2: raftypb.Rafty.SendVoteRequest:input_type -> raftypb.VoteRequest
	9,  // 3: raftypb.Rafty.ClientGetLeader:input_type -> raftypb.ClientGetLeaderRequest
	11, // 4: raftypb.Rafty.GetLeader:input_type -> raftypb.GetLeaderRequest
	5,  // 5: raftypb.Rafty.SendAppendEntriesRequest:input_type -> raftypb.AppendEntryRequest
	7,  // 6: raftypb.Rafty.AskNodeID:input_type -> raftypb.AskNodeIDRequest
	13, // 7: raftypb.Rafty.ForwardCommandToLeader:input_type -> raftypb.ForwardCommandToLeaderRequest
	15, // 8: raftypb.Rafty.SendTimeoutNowRequest:input_type -> raftypb.TimeoutNowRequest
	17, // 9: raftypb.Rafty.SendBootstrapClusterRequest:input_type -> raftypb.BootstrapClusterRequest
	19, // 10: raftypb.Rafty.SendInstallSnapshotRequest:input_type -> raftypb.InstallSnapshotRequest
	1,  // 11: raftypb.Rafty.SendPreVoteRequest:output_type -> raftypb.PreVoteResponse
	3,  // 12: raftypb.Rafty.SendVoteRequest:output_type -> raftypb.VoteResponse
	10, // 13: raftypb.Rafty.ClientGetLeader:output_type -> raftypb.ClientGetLeaderResponse
	12, // 14: raftypb.Rafty.GetLeader:output_type -> raftypb.GetLeaderResponse
	6,  // 15: raftypb.Rafty.SendAppendEntriesRequest:output_type -> raftypb.AppendEntryResponse
	8,  // 16: raftypb.Rafty.AskNodeID:output_type -> raftypb.AskNodeIDResponse
	14, // 17: raftypb.Rafty.ForwardCommandToLeader:output_type -> raftypb.ForwardCommandToLeaderResponse
	16, // 18: raftypb.Rafty.SendTimeoutNowRequest:output_type -> raftypb.TimeoutNowResponse
	18, // 19: raftypb.Rafty.SendBootstrapClusterRequest:output_type -> raftypb.BootstrapClusterResponse
	20, // 20: raftypb.Rafty.SendInstallSnapshotRequest:output_type -> raftypb.InstallSnapshotResponse
	11, // [11:21] is the sub-list for method output_type
	1,  // [1:11] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_raftypb_requests_proto_init() }
func file_raftypb_requests_proto_init() {
	if File_raftypb_requests_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_raftypb_requests_proto_rawDesc), len(file_raftypb_requests_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_raftypb_requests_proto_goTypes,
		DependencyIndexes: file_raftypb_requests_proto_depIdxs,
		MessageInfos:      file_raftypb_requests_proto_msgTypes,
	}.Build()
	File_raftypb_requests_proto = out.File
	file_raftypb_requests_proto_goTypes = nil
	file_raftypb_requests_proto_depIdxs = nil
}
